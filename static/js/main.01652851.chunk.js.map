{"version":3,"sources":["components/layouts/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDelete","delete","_this2","_this$props$contact","name","email","phone","style","cursor","onClick","color","float","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layouts_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","Context_Provider","layouts_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01652851.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-danger mb-4'>\r\n        <div className='container'>\r\n          <a className='navbar-brand' href='/'>\r\n            {branding}\r\n          </a>\r\n          <ul className='navbar-nav mr-5'>\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to='/'>\r\n                <i className='fas fa-home' /> Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to='/about'>\r\n                <i className='fas fa-question' /> About\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to='/contact/add'>\r\n                <i className='fas fa-plus' /> Add\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Context.Provider value={this.state}>\r\n          {this.props.children}\r\n        </Context.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDelete = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                />\r\n                <i\r\n                  className='fas fa-times'\r\n                  style={{ cursor: 'pointer', color: 'red', float: 'right' }}\r\n                  onClick={this.onDelete.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt'\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      color: 'black',\r\n                      float: 'right',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>{email}</li>\r\n                  <li className='list-group-item'>{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className='display-4'>\r\n                <span className='text-danger'>Contact </span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className='form-group'>\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          className={classnames('form-control form-control-lg', {\r\n            'is-invalid': error\r\n          })}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className='invalid-feedback'>{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is Required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is Required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is Required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    //clear fields\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      error: {}\r\n    });\r\n    //re direct to contats after adding\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'> Add Contact </div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='Enter Full Name'\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Enter email'\r\n                    name='email'\r\n                    type='email'\r\n                    value={email}\r\n                    placeholder='Enter email'\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Enter phone'\r\n                    name='phone'\r\n                    value={phone}\r\n                    placeholder='Enter Full phone'\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-block btn-dark'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is Required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is Required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is Required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params; \r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    //clear fields\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      error: {}\r\n    });\r\n    //re direct to contats after adding\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'> Edit Contact </div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    value={name}\r\n                    placeholder='Enter Full Name'\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Enter email'\r\n                    name='email'\r\n                    type='email'\r\n                    value={email}\r\n                    placeholder='Enter email'\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Enter phone'\r\n                    name='phone'\r\n                    value={phone}\r\n                    placeholder='Enter Full phone'\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-block btn-dark'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact Manager</h1>\r\n      <p className='lead'>Simple Contact manager app</p>\r\n      <p className='text-secondary'>Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>\r\n        <span className='text-danger'>404 </span>Page Not Found\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}